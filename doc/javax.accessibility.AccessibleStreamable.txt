*javax.accessibility.AccessibleStreamable* *AccessibleStreamable* The AccessibleStreamable interface should be implemented
 by t

public interface interface AccessibleStreamable


|javax.accessibility.AccessibleStreamable_Description|
|javax.accessibility.AccessibleStreamable_Fields|
|javax.accessibility.AccessibleStreamable_Constructors|
|javax.accessibility.AccessibleStreamable_Methods|

================================================================================================================================

*javax.accessibility.AccessibleStreamable_Methods*
|javax.accessibility.AccessibleStreamable.getMimeTypes()|Returns an array of DataFlavor objects for the MIME types  this object
|javax.accessibility.AccessibleStreamable.getStream(DataFlavor)|Returns an InputStream for a DataFlavor

*javax.accessibility.AccessibleStreamable_Description*

The AccessibleStreamable interface should be implemented by the AccessibleContext of any component that presents the raw stream 
behind a component on the display screen. Examples of such components are HTML, bitmap images and MathML. An object that 
implements AccessibleStreamable provides two things: a list of MIME types supported by the object and a streaming interface for 
each MIME type to get the data. 



*javax.accessibility.AccessibleStreamable.getMimeTypes()*

public |java.awt.datatransfer.DataFlavor|[] getMimeTypes()

Returns an array of DataFlavor objects for the MIME types this object supports. 



    Returns: an array of DataFlavor objects for the MIME types this object supports. 

*javax.accessibility.AccessibleStreamable.getStream(DataFlavor)*

public |java.io.InputStream| getStream(java.awt.datatransfer.DataFlavor flavor)

Returns an InputStream for a DataFlavor 


    flavor - the DataFlavor 

    Returns: an ImputStream if an ImputStream for this DataFlavor exists. Otherwise, null is returned. 


