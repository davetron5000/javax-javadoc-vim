*javax.lang.model.util.SimpleAnnotationValueVisitor6* *SimpleAnnotationValueVisitor6* A simple visitor for annotation values wit

public class SimpleAnnotationValueVisitor6<R,P>
  extends    |javax.lang.model.util.AbstractAnnotationValueVisitor6|

|javax.lang.model.util.SimpleAnnotationValueVisitor6_Description|
|javax.lang.model.util.SimpleAnnotationValueVisitor6_Fields|
|javax.lang.model.util.SimpleAnnotationValueVisitor6_Constructors|
|javax.lang.model.util.SimpleAnnotationValueVisitor6_Methods|

================================================================================================================================

*javax.lang.model.util.SimpleAnnotationValueVisitor6_Fields*
|R_javax.lang.model.util.SimpleAnnotationValueVisitor6.DEFAULT_VALUE|

*javax.lang.model.util.SimpleAnnotationValueVisitor6_Constructors*
|javax.lang.model.util.SimpleAnnotationValueVisitor6()|Constructor for concrete subclasses; usesnullfor the  default value.
|javax.lang.model.util.SimpleAnnotationValueVisitor6(R)|Constructor for concrete subclasses; uses the argument for the  default

*javax.lang.model.util.SimpleAnnotationValueVisitor6_Methods*
|javax.lang.model.util.SimpleAnnotationValueVisitor6.defaultAction(Object,P)|The default action for visit methods.
|javax.lang.model.util.SimpleAnnotationValueVisitor6.visitAnnotation(AnnotationMirror,P)|This implementation callsdefaultAction
|javax.lang.model.util.SimpleAnnotationValueVisitor6.visitArray(List<?extendsAnnotationValue>,P)|This implementation callsdefau
|javax.lang.model.util.SimpleAnnotationValueVisitor6.visitBoolean(boolean,P)|This implementation callsdefaultAction.
|javax.lang.model.util.SimpleAnnotationValueVisitor6.visitByte(byte,P)|This implementation callsdefaultAction.
|javax.lang.model.util.SimpleAnnotationValueVisitor6.visitChar(char,P)|This implementation callsdefaultAction.
|javax.lang.model.util.SimpleAnnotationValueVisitor6.visitDouble(double,P)|This implementation callsdefaultAction.
|javax.lang.model.util.SimpleAnnotationValueVisitor6.visitEnumConstant(VariableElement,P)|This implementation callsdefaultActio
|javax.lang.model.util.SimpleAnnotationValueVisitor6.visitFloat(float,P)|This implementation callsdefaultAction.
|javax.lang.model.util.SimpleAnnotationValueVisitor6.visitInt(int,P)|This implementation callsdefaultAction.
|javax.lang.model.util.SimpleAnnotationValueVisitor6.visitLong(long,P)|This implementation callsdefaultAction.
|javax.lang.model.util.SimpleAnnotationValueVisitor6.visitShort(short,P)|This implementation callsdefaultAction.
|javax.lang.model.util.SimpleAnnotationValueVisitor6.visitString(String,P)|This implementation callsdefaultAction.
|javax.lang.model.util.SimpleAnnotationValueVisitor6.visitType(TypeMirror,P)|This implementation callsdefaultAction.

*javax.lang.model.util.SimpleAnnotationValueVisitor6_Description*

A simple visitor for annotation values with default behavior appropriate for the RELEASE_6(|javax.lang.model.SourceVersion|) 
source version. Visit methods call (|javax.lang.model.util.SimpleAnnotationValueVisitor6|) passing their arguments 
todefaultAction's corresponding parameters. 

Methods in this class may be overridden subject to their general contract. Note that annotating methods in concrete subclasses 
with @Override(|java.lang.Override|) will help ensure that methods are overridden as intended. 

WARNING: TheAnnotationValueVisitorinterface implemented by this class may have methods added to it in the future to accommodate 
new, currently unknown, language structures added to future versions of the Java programming language. Therefore, methods whose 
names begin with"visit"may be added to this class in the future; to avoid incompatibilities, classes which extend this class 
should not declare any instance methods with names beginning with"visit". 

When such a new visit method is added, the default implementation in this class will be to call the 
visitUnknown(|javax.lang.model.util.SimpleAnnotationValueVisitor6|) method. A new simple annotation value visitor class will 
also be introduced to correspond to the new language level; this visitor will have different default behavior for the visit 
method in question. When the new visitor is introduced, all or portions of this visitor may be deprecated. 



*R_javax.lang.model.util.SimpleAnnotationValueVisitor6.DEFAULT_VALUE*

Default value to be returned; defaultAction(|javax.lang.model.util.SimpleAnnotationValueVisitor6|) returns this value unless 
the method is overridden. 



*javax.lang.model.util.SimpleAnnotationValueVisitor6()*

protected SimpleAnnotationValueVisitor6()

Constructor for concrete subclasses; usesnullfor the default value. 


*javax.lang.model.util.SimpleAnnotationValueVisitor6(R)*

protected SimpleAnnotationValueVisitor6(R defaultValue)

Constructor for concrete subclasses; uses the argument for the default value. 

    defaultValue - the value to assign to {@link #DEFAULT_VALUE} 

*javax.lang.model.util.SimpleAnnotationValueVisitor6.defaultAction(Object,P)*

protected |R| defaultAction(
  java.lang.Object o,
  P p)

The default action for visit methods. The implementation in this class just returns 
(|javax.lang.model.util.SimpleAnnotationValueVisitor6|) ; subclasses will commonly override this method. 


    o - the value of the annotation 
    p - a visitor-specified parameter 

    Returns: {@code DEFAULT_VALUE} unless overridden 

*javax.lang.model.util.SimpleAnnotationValueVisitor6.visitAnnotation(AnnotationMirror,P)*

public |R| visitAnnotation(
  javax.lang.model.element.AnnotationMirror a,
  P p)

This implementation callsdefaultAction. 


    a - {@inheritDoc} 
    p - {@inheritDoc} 

    Returns: the result of {@code defaultAction} 

*javax.lang.model.util.SimpleAnnotationValueVisitor6.visitArray(List<?extendsAnnotationValue>,P)*

public |R| visitArray(
  java.util.List<? extends javax.lang.model.element.AnnotationValue> vals,
  P p)

This implementation callsdefaultAction. 


    vals - {@inheritDoc} 
    p - {@inheritDoc} 

    Returns: the result of {@code defaultAction} 

*javax.lang.model.util.SimpleAnnotationValueVisitor6.visitBoolean(boolean,P)*

public |R| visitBoolean(
  boolean b,
  P p)

This implementation callsdefaultAction. 


    b - {@inheritDoc} 
    p - {@inheritDoc} 

    Returns: the result of {@code defaultAction} 

*javax.lang.model.util.SimpleAnnotationValueVisitor6.visitByte(byte,P)*

public |R| visitByte(
  byte b,
  P p)

This implementation callsdefaultAction. 


    b - {@inheritDoc} 
    p - {@inheritDoc} 

    Returns: the result of {@code defaultAction} 

*javax.lang.model.util.SimpleAnnotationValueVisitor6.visitChar(char,P)*

public |R| visitChar(
  char c,
  P p)

This implementation callsdefaultAction. 


    c - {@inheritDoc} 
    p - {@inheritDoc} 

    Returns: the result of {@code defaultAction} 

*javax.lang.model.util.SimpleAnnotationValueVisitor6.visitDouble(double,P)*

public |R| visitDouble(
  double d,
  P p)

This implementation callsdefaultAction. 


    d - {@inheritDoc} 
    p - {@inheritDoc} 

    Returns: the result of {@code defaultAction} 

*javax.lang.model.util.SimpleAnnotationValueVisitor6.visitEnumConstant(VariableElement,P)*

public |R| visitEnumConstant(
  javax.lang.model.element.VariableElement c,
  P p)

This implementation callsdefaultAction. 


    c - {@inheritDoc} 
    p - {@inheritDoc} 

    Returns: the result of {@code defaultAction} 

*javax.lang.model.util.SimpleAnnotationValueVisitor6.visitFloat(float,P)*

public |R| visitFloat(
  float f,
  P p)

This implementation callsdefaultAction. 


    f - {@inheritDoc} 
    p - {@inheritDoc} 

    Returns: the result of {@code defaultAction} 

*javax.lang.model.util.SimpleAnnotationValueVisitor6.visitInt(int,P)*

public |R| visitInt(
  int i,
  P p)

This implementation callsdefaultAction. 


    i - {@inheritDoc} 
    p - {@inheritDoc} 

    Returns: the result of {@code defaultAction} 

*javax.lang.model.util.SimpleAnnotationValueVisitor6.visitLong(long,P)*

public |R| visitLong(
  long i,
  P p)

This implementation callsdefaultAction. 


    i - {@inheritDoc} 
    p - {@inheritDoc} 

    Returns: the result of {@code defaultAction} 

*javax.lang.model.util.SimpleAnnotationValueVisitor6.visitShort(short,P)*

public |R| visitShort(
  short s,
  P p)

This implementation callsdefaultAction. 


    s - {@inheritDoc} 
    p - {@inheritDoc} 

    Returns: the result of {@code defaultAction} 

*javax.lang.model.util.SimpleAnnotationValueVisitor6.visitString(String,P)*

public |R| visitString(
  java.lang.String s,
  P p)

This implementation callsdefaultAction. 


    s - {@inheritDoc} 
    p - {@inheritDoc} 

    Returns: the result of {@code defaultAction} 

*javax.lang.model.util.SimpleAnnotationValueVisitor6.visitType(TypeMirror,P)*

public |R| visitType(
  javax.lang.model.type.TypeMirror t,
  P p)

This implementation callsdefaultAction. 


    t - {@inheritDoc} 
    p - {@inheritDoc} 

    Returns: the result of {@code defaultAction} 


