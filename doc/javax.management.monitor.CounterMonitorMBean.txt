*javax.management.monitor.CounterMonitorMBean* *CounterMonitorMBean* Exposes the remote management interface of the counter moni

public interface interface CounterMonitorMBean

  implements |javax.management.monitor.MonitorMBean|

|javax.management.monitor.CounterMonitorMBean_Description|
|javax.management.monitor.CounterMonitorMBean_Fields|
|javax.management.monitor.CounterMonitorMBean_Constructors|
|javax.management.monitor.CounterMonitorMBean_Methods|

================================================================================================================================

*javax.management.monitor.CounterMonitorMBean_Methods*
|javax.management.monitor.CounterMonitorMBean.getDerivedGauge()|Gets the derived gauge.
|javax.management.monitor.CounterMonitorMBean.getDerivedGauge(ObjectName)|Gets the derived gauge for the specified MBean.
|javax.management.monitor.CounterMonitorMBean.getDerivedGaugeTimeStamp()|Gets the derived gauge timestamp.
|javax.management.monitor.CounterMonitorMBean.getDerivedGaugeTimeStamp(ObjectName)|Gets the derived gauge timestamp for the spe
|javax.management.monitor.CounterMonitorMBean.getDifferenceMode()|Gets the difference mode flag value.
|javax.management.monitor.CounterMonitorMBean.getInitThreshold()|Gets the initial threshold value common to all observed object
|javax.management.monitor.CounterMonitorMBean.getModulus()|Gets the modulus value.
|javax.management.monitor.CounterMonitorMBean.getNotify()|Gets the notification's on/off switch value.
|javax.management.monitor.CounterMonitorMBean.getOffset()|Gets the offset value.
|javax.management.monitor.CounterMonitorMBean.getThreshold()|Gets the threshold value.
|javax.management.monitor.CounterMonitorMBean.getThreshold(ObjectName)|Gets the threshold value for the specified MBean.
|javax.management.monitor.CounterMonitorMBean.setDifferenceMode(boolean)|Sets the difference mode flag value.
|javax.management.monitor.CounterMonitorMBean.setInitThreshold(Number)|Sets the initial threshold value common to all observed 
|javax.management.monitor.CounterMonitorMBean.setModulus(Number)|Sets the modulus value.
|javax.management.monitor.CounterMonitorMBean.setNotify(boolean)|Sets the notification's on/off switch value.
|javax.management.monitor.CounterMonitorMBean.setOffset(Number)|Sets the offset value.
|javax.management.monitor.CounterMonitorMBean.setThreshold(Number)|Sets the threshold value.

*javax.management.monitor.CounterMonitorMBean_Description*

Exposes the remote management interface of the counter monitor MBean. 



*javax.management.monitor.CounterMonitorMBean.getDerivedGauge()*

public |java.lang.Number| getDerivedGauge()

Gets the derived gauge. 

    Deprecated: As of JMX 1.2, replaced by {@link #getDerivedGauge(ObjectName)}


    Returns: The derived gauge. 

*javax.management.monitor.CounterMonitorMBean.getDerivedGauge(ObjectName)*

public |java.lang.Number| getDerivedGauge(javax.management.ObjectName object)

Gets the derived gauge for the specified MBean. 


    object - the MBean for which the derived gauge is to be returned 

    Returns: The derived gauge for the specified MBean if this MBean is in the set of observed MBeans, or null otherwise. 

*javax.management.monitor.CounterMonitorMBean.getDerivedGaugeTimeStamp()*

public long getDerivedGaugeTimeStamp()

Gets the derived gauge timestamp. 

    Deprecated: As of JMX 1.2, replaced by {@link #getDerivedGaugeTimeStamp(ObjectName)}


    Returns: The derived gauge timestamp. 

*javax.management.monitor.CounterMonitorMBean.getDerivedGaugeTimeStamp(ObjectName)*

public long getDerivedGaugeTimeStamp(javax.management.ObjectName object)

Gets the derived gauge timestamp for the specified MBean. 


    object - the MBean for which the derived gauge timestamp is to be returned 

    Returns: The derived gauge timestamp for the specified MBean if this MBean is in the set of observed MBeans, or null otherwise. 

*javax.management.monitor.CounterMonitorMBean.getDifferenceMode()*

public boolean getDifferenceMode()

Gets the difference mode flag value. 



    Returns: true if the difference mode is used, false otherwise. 

*javax.management.monitor.CounterMonitorMBean.getInitThreshold()*

public |java.lang.Number| getInitThreshold()

Gets the initial threshold value common to all observed objects. 



    Returns: The initial threshold value. 

*javax.management.monitor.CounterMonitorMBean.getModulus()*

public |java.lang.Number| getModulus()

Gets the modulus value. 



    Returns: The modulus value. 

*javax.management.monitor.CounterMonitorMBean.getNotify()*

public boolean getNotify()

Gets the notification's on/off switch value. 



    Returns: true if the counter monitor notifies when exceeding the threshold, false otherwise. 

*javax.management.monitor.CounterMonitorMBean.getOffset()*

public |java.lang.Number| getOffset()

Gets the offset value. 



    Returns: The offset value. 

*javax.management.monitor.CounterMonitorMBean.getThreshold()*

public |java.lang.Number| getThreshold()

Gets the threshold value. 

    Deprecated: As of JMX 1.2, replaced by {@link #getThreshold(ObjectName)}


    Returns: The threshold value. 

*javax.management.monitor.CounterMonitorMBean.getThreshold(ObjectName)*

public |java.lang.Number| getThreshold(javax.management.ObjectName object)

Gets the threshold value for the specified MBean. 


    object - the MBean for which the threshold value is to be returned 

    Returns: The threshold value for the specified MBean if this MBean is in the set of observed MBeans, or null otherwise. 

*javax.management.monitor.CounterMonitorMBean.setDifferenceMode(boolean)*

public void setDifferenceMode(boolean value)

Sets the difference mode flag value. 


    value - The difference mode flag value. 

*javax.management.monitor.CounterMonitorMBean.setInitThreshold(Number)*

public void setInitThreshold(java.lang.Number value)
  throws |java.lang.IllegalArgumentException|
         
Sets the initial threshold value common to all observed MBeans. 


    value - The initial threshold value. 

*javax.management.monitor.CounterMonitorMBean.setModulus(Number)*

public void setModulus(java.lang.Number value)
  throws |java.lang.IllegalArgumentException|
         
Sets the modulus value. 


    value - The modulus value. 

*javax.management.monitor.CounterMonitorMBean.setNotify(boolean)*

public void setNotify(boolean value)

Sets the notification's on/off switch value. 


    value - The notification's on/off switch value. 

*javax.management.monitor.CounterMonitorMBean.setOffset(Number)*

public void setOffset(java.lang.Number value)
  throws |java.lang.IllegalArgumentException|
         
Sets the offset value. 


    value - The offset value. 

*javax.management.monitor.CounterMonitorMBean.setThreshold(Number)*

public void setThreshold(java.lang.Number value)
  throws |java.lang.IllegalArgumentException|
         
Sets the threshold value. 

    Deprecated: As of JMX 1.2, replaced by {@link #setInitThreshold}

    value - The threshold value. 


