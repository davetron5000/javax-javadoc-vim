*javax.management.relation.RoleUnresolved* *RoleUnresolved* Represents an unresolved role: a role not retrieved from a relation 

public class RoleUnresolved
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|javax.management.relation.RoleUnresolved_Description|
|javax.management.relation.RoleUnresolved_Fields|
|javax.management.relation.RoleUnresolved_Constructors|
|javax.management.relation.RoleUnresolved_Methods|

================================================================================================================================

*javax.management.relation.RoleUnresolved_Constructors*
|javax.management.relation.RoleUnresolved(String,List<ObjectName>,int)|Constructor.

*javax.management.relation.RoleUnresolved_Methods*
|javax.management.relation.RoleUnresolved.clone()|Clone this object.
|javax.management.relation.RoleUnresolved.getProblemType()|Retrieves problem type.
|javax.management.relation.RoleUnresolved.getRoleName()|Retrieves role name.
|javax.management.relation.RoleUnresolved.getRoleValue()|Retrieves role value.
|javax.management.relation.RoleUnresolved.setProblemType(int)|Sets problem type.
|javax.management.relation.RoleUnresolved.setRoleName(String)|Sets role name.
|javax.management.relation.RoleUnresolved.setRoleValue(List<ObjectName>)|Sets role value.
|javax.management.relation.RoleUnresolved.toString()|Return a string describing this object.

*javax.management.relation.RoleUnresolved_Description*

Represents an unresolved role: a role not retrieved from a relation due to a problem. It provides the role name, value (if 
problem when trying to set the role) and an integer defining the problem (constants defined in RoleStatus). 

The serialVersionUID of this class is -48350262537070138L. 



*javax.management.relation.RoleUnresolved(String,List<ObjectName>,int)*

public RoleUnresolved(
  java.lang.String name,
  java.util.List<javax.management.ObjectName> value,
  int pbType)
  throws |java.lang.IllegalArgumentException|
         
Constructor. 

    name - name of the role 
    value - value of the role (if problem when setting the role) 
    pbType - type of problem (according to known problem types, listed as static final members). 

*javax.management.relation.RoleUnresolved.clone()*

public |java.lang.Object| clone()

Clone this object. 



    Returns: an independent clone. 

*javax.management.relation.RoleUnresolved.getProblemType()*

public int getProblemType()

Retrieves problem type. 



    Returns: an integer corresponding to a problem, those being described as static final members of current class. 

*javax.management.relation.RoleUnresolved.getRoleName()*

public |java.lang.String| getRoleName()

Retrieves role name. 



    Returns: the role name. 

*javax.management.relation.RoleUnresolved.getRoleValue()*

public |java.util.List|<ObjectName> getRoleValue()

Retrieves role value. 



    Returns: an ArrayList of ObjectName objects, the one provided to be set in given role. Null if the unresolved role is returned for a 
             read access. 

*javax.management.relation.RoleUnresolved.setProblemType(int)*

public void setProblemType(int pbType)
  throws |java.lang.IllegalArgumentException|
         
Sets problem type. 


    pbType - integer corresponding to a problem. Must be one of those described as static final members of current class. 

*javax.management.relation.RoleUnresolved.setRoleName(String)*

public void setRoleName(java.lang.String name)
  throws |java.lang.IllegalArgumentException|
         
Sets role name. 


    name - the new role name. 

*javax.management.relation.RoleUnresolved.setRoleValue(List<ObjectName>)*

public void setRoleValue(java.util.List<javax.management.ObjectName> value)

Sets role value. 


    value - List of ObjectName objects for referenced MBeans not set in role. 

*javax.management.relation.RoleUnresolved.toString()*

public |java.lang.String| toString()

Return a string describing this object. 



    Returns: a description of this RoleUnresolved object. 


