*javax.script.Bindings* *Bindings* A mapping of key/value pairs, all of whose keys are
 Strings.

public interface interface Bindings

  implements |java.util.Map|

|javax.script.Bindings_Description|
|javax.script.Bindings_Fields|
|javax.script.Bindings_Constructors|
|javax.script.Bindings_Methods|

================================================================================================================================

*javax.script.Bindings_Methods*
|javax.script.Bindings.containsKey(Object)|Returns true if this map contains a mapping for the specified  key.
|javax.script.Bindings.get(Object)|Returns the value to which this map maps the specified key.
|javax.script.Bindings.put(String,Object)|Set a named value.
|javax.script.Bindings.putAll(Map<?extendsString,?extendsObject>)|Adds all the mappings in a given Map to this Bindings.
|javax.script.Bindings.remove(Object)|Removes the mapping for this key from this map if it is present  (optional operation).

*javax.script.Bindings_Description*

A mapping of key/value pairs, all of whose keys are Strings. 



*javax.script.Bindings.containsKey(Object)*

public boolean containsKey(java.lang.Object key)

Returns true if this map contains a mapping for the specified key. More formally, returns true if and only if this map contains 
a mapping for a key k such that (key==null ? k==null : key.equals(k)). (There can be at most one such mapping.) 


    key - key whose presence in this map is to be tested. 

    Returns: true if this map contains a mapping for the specified key. 

*javax.script.Bindings.get(Object)*

public |java.lang.Object| get(java.lang.Object key)

Returns the value to which this map maps the specified key. Returns null if the map contains no mapping for this key. A return 
value of null does not necessarily indicate that the map contains no mapping for the key; it's also possible that the map 
explicitly maps the key to null. The containsKey operation may be used to distinguish these two cases. 

More formally, if this map contains a mapping from a key k to a value v such that (key==null ? k==null : key.equals(k)), then 
this method returns v; otherwise it returns null. (There can be at most one such mapping.) 


    key - key whose associated value is to be returned. 

    Returns: the value to which this map maps the specified key, or null if the map contains no mapping for this key. 

*javax.script.Bindings.put(String,Object)*

public |java.lang.Object| put(
  java.lang.String name,
  java.lang.Object value)

Set a named value. 


    name - The name associated with the value. 
    value - The value associated with the name. 

    Returns: The value previously associated with the given name. Returns null if no value was previously associated with the name. 

*javax.script.Bindings.putAll(Map<?extendsString,?extendsObject>)*

public void putAll(java.util.Map<? extends java.lang.String, ? extends java.lang.Object> toMerge)

Adds all the mappings in a given Map to this Bindings. 


    toMerge - The Map to merge with this one. 

*javax.script.Bindings.remove(Object)*

public |java.lang.Object| remove(java.lang.Object key)

Removes the mapping for this key from this map if it is present (optional operation). More formally, if this map contains a 
mapping from key k to value v such that (key==null ? k==null : key.equals(k)), that mapping is removed. (The map can contain at 
most one such mapping.) 

Returns the value to which the map previously associated the key, or null if the map contained no mapping for this key. (A null 
return can also indicate that the map previously associated null with the specified key if the implementation supports null 
values.) The map will not contain a mapping for the specified key once the call returns. 


    key - key whose mapping is to be removed from the map. 

    Returns: previous value associated with specified key, or null if there was no mapping for key. 


