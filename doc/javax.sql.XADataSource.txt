*javax.sql.XADataSource* *XADataSource* A factory for XAConnection objects that is used internally.

public interface interface XADataSource

  implements |javax.sql.CommonDataSource|

|javax.sql.XADataSource_Description|
|javax.sql.XADataSource_Fields|
|javax.sql.XADataSource_Constructors|
|javax.sql.XADataSource_Methods|

================================================================================================================================

*javax.sql.XADataSource_Methods*
|javax.sql.XADataSource.getXAConnection()|Attempts to establish a physical database connection that can be  used in a distribut
|javax.sql.XADataSource.getXAConnection(String,String)|Attempts to establish a physical database connection, using the given  u

*javax.sql.XADataSource_Description*

A factory for XAConnection objects that is used internally. An object that implements the XADataSource interface is typically 
registered with a naming service that uses the Java Naming and Directory InterfaceTM (JNDI). 



*javax.sql.XADataSource.getXAConnection()*

public |javax.sql.XAConnection| getXAConnection()
  throws |java.sql.SQLException|
         
Attempts to establish a physical database connection that can be used in a distributed transaction. 



    Returns: an XAConnection object, which represents a physical connection to a data source, that can be used in a distributed transaction 

*javax.sql.XADataSource.getXAConnection(String,String)*

public |javax.sql.XAConnection| getXAConnection(
  java.lang.String user,
  java.lang.String password)
  throws |java.sql.SQLException|
         
Attempts to establish a physical database connection, using the given user name and password. The connection that is returned 
is one that can be used in a distributed transaction. 


    user - the database user on whose behalf the connection is being made 
    password - the user's password 

    Returns: an XAConnection object, which represents a physical connection to a data source, that can be used in a distributed transaction 


