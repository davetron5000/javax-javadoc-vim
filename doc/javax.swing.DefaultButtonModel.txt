*javax.swing.DefaultButtonModel* *DefaultButtonModel* The default implementation of a Button component's data model.

public class DefaultButtonModel
  extends    |java.lang.Object|
  implements |javax.swing.ButtonModel|
             |java.io.Serializable|

|javax.swing.DefaultButtonModel_Description|
|javax.swing.DefaultButtonModel_Fields|
|javax.swing.DefaultButtonModel_Constructors|
|javax.swing.DefaultButtonModel_Methods|

================================================================================================================================

*javax.swing.DefaultButtonModel_Fields*
|java.lang.String_javax.swing.DefaultButtonModel.actionCommand|
|int_javax.swing.DefaultButtonModel.ARMED|
|javax.swing.event.ChangeEvent_javax.swing.DefaultButtonModel.changeEvent|
|int_javax.swing.DefaultButtonModel.ENABLED|
|javax.swing.ButtonGroup_javax.swing.DefaultButtonModel.group|
|javax.swing.event.EventListenerList_javax.swing.DefaultButtonModel.listenerList|
|int_javax.swing.DefaultButtonModel.mnemonic|
|int_javax.swing.DefaultButtonModel.PRESSED|
|int_javax.swing.DefaultButtonModel.ROLLOVER|
|int_javax.swing.DefaultButtonModel.SELECTED|
|int_javax.swing.DefaultButtonModel.stateMask|

*javax.swing.DefaultButtonModel_Constructors*
|javax.swing.DefaultButtonModel()|Constructs a DefaultButtonModel.

*javax.swing.DefaultButtonModel_Methods*
|javax.swing.DefaultButtonModel.addActionListener(ActionListener)|
|javax.swing.DefaultButtonModel.addChangeListener(ChangeListener)|
|javax.swing.DefaultButtonModel.addItemListener(ItemListener)|
|javax.swing.DefaultButtonModel.fireActionPerformed(ActionEvent)|Notifies all listeners that have registered interest for  noti
|javax.swing.DefaultButtonModel.fireItemStateChanged(ItemEvent)|Notifies all listeners that have registered interest for  notif
|javax.swing.DefaultButtonModel.fireStateChanged()|Notifies all listeners that have registered interest for  notification on th
|javax.swing.DefaultButtonModel.getActionCommand()|
|javax.swing.DefaultButtonModel.getActionListeners()|Returns an array of all the action listeners  registered on this DefaultBu
|javax.swing.DefaultButtonModel.getChangeListeners()|Returns an array of all the change listeners  registered on this DefaultBu
|javax.swing.DefaultButtonModel.getGroup()|Returns the group that the button belongs to.
|javax.swing.DefaultButtonModel.getItemListeners()|Returns an array of all the item listeners  registered on this DefaultButton
|javax.swing.DefaultButtonModel.getListeners(Class<T>)|Returns an array of all the objects currently registered as  FooListener
|javax.swing.DefaultButtonModel.getMnemonic()|
|javax.swing.DefaultButtonModel.getSelectedObjects()|Overridden to return null.
|javax.swing.DefaultButtonModel.isArmed()|
|javax.swing.DefaultButtonModel.isEnabled()|
|javax.swing.DefaultButtonModel.isPressed()|
|javax.swing.DefaultButtonModel.isRollover()|
|javax.swing.DefaultButtonModel.isSelected()|
|javax.swing.DefaultButtonModel.removeActionListener(ActionListener)|
|javax.swing.DefaultButtonModel.removeChangeListener(ChangeListener)|
|javax.swing.DefaultButtonModel.removeItemListener(ItemListener)|
|javax.swing.DefaultButtonModel.setActionCommand(String)|
|javax.swing.DefaultButtonModel.setArmed(boolean)|
|javax.swing.DefaultButtonModel.setEnabled(boolean)|
|javax.swing.DefaultButtonModel.setGroup(ButtonGroup)|
|javax.swing.DefaultButtonModel.setMnemonic(int)|
|javax.swing.DefaultButtonModel.setPressed(boolean)|
|javax.swing.DefaultButtonModel.setRollover(boolean)|
|javax.swing.DefaultButtonModel.setSelected(boolean)|

*javax.swing.DefaultButtonModel_Description*

The default implementation of a Button component's data model. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support 
is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for 
long term storage of all JavaBeansTM has been added to the java.beans package. Please see (|java.beans.XMLEncoder|) . 



*java.lang.String_javax.swing.DefaultButtonModel.actionCommand*

The action command string fired by the button. 


*int_javax.swing.DefaultButtonModel.ARMED*

Identifies the "armed" bit in the bitmask, which indicates partial commitment towards choosing/triggering the button. 


*javax.swing.event.ChangeEvent_javax.swing.DefaultButtonModel.changeEvent*

Only one ChangeEvent is needed per button model instance since the event's only state is the source property. The source of 
events generated is always "this". 


*int_javax.swing.DefaultButtonModel.ENABLED*

Identifies the "enabled" bit in the bitmask, which indicates that the button can be selected by an input device (such as a 
mouse pointer). 


*javax.swing.ButtonGroup_javax.swing.DefaultButtonModel.group*

The button group that the button belongs to. 


*javax.swing.event.EventListenerList_javax.swing.DefaultButtonModel.listenerList*

Stores the listeners on this model. 


*int_javax.swing.DefaultButtonModel.mnemonic*

The button's mnemonic. 


*int_javax.swing.DefaultButtonModel.PRESSED*

Identifies the "pressed" bit in the bitmask, which indicates that the button is pressed. 


*int_javax.swing.DefaultButtonModel.ROLLOVER*

Identifies the "rollover" bit in the bitmask, which indicates that the mouse is over the button. 


*int_javax.swing.DefaultButtonModel.SELECTED*

Identifies the "selected" bit in the bitmask, which indicates that the button has been selected. Only needed for certain types 
of buttons - such as radio button or check box. 


*int_javax.swing.DefaultButtonModel.stateMask*

The bitmask used to store the state of the button. 



*javax.swing.DefaultButtonModel()*

public DefaultButtonModel()

Constructs a DefaultButtonModel. 


*javax.swing.DefaultButtonModel.addActionListener(ActionListener)*

public void addActionListener(java.awt.event.ActionListener l)





*javax.swing.DefaultButtonModel.addChangeListener(ChangeListener)*

public void addChangeListener(javax.swing.event.ChangeListener l)





*javax.swing.DefaultButtonModel.addItemListener(ItemListener)*

public void addItemListener(java.awt.event.ItemListener l)





*javax.swing.DefaultButtonModel.fireActionPerformed(ActionEvent)*

protected void fireActionPerformed(java.awt.event.ActionEvent e)

Notifies all listeners that have registered interest for notification on this event type. 


    e - the ActionEvent to deliver to listeners 

*javax.swing.DefaultButtonModel.fireItemStateChanged(ItemEvent)*

protected void fireItemStateChanged(java.awt.event.ItemEvent e)

Notifies all listeners that have registered interest for notification on this event type. 


    e - the ItemEvent to deliver to listeners 

*javax.swing.DefaultButtonModel.fireStateChanged()*

protected void fireStateChanged()

Notifies all listeners that have registered interest for notification on this event type. The event instance is created lazily. 



*javax.swing.DefaultButtonModel.getActionCommand()*

public |java.lang.String| getActionCommand()





*javax.swing.DefaultButtonModel.getActionListeners()*

public |java.awt.event.ActionListener|[] getActionListeners()

Returns an array of all the action listeners registered on this DefaultButtonModel. 



    Returns: all of this model's ActionListeners or an empty array if no action listeners are currently registered 

*javax.swing.DefaultButtonModel.getChangeListeners()*

public |javax.swing.event.ChangeListener|[] getChangeListeners()

Returns an array of all the change listeners registered on this DefaultButtonModel. 



    Returns: all of this model's ChangeListeners or an empty array if no change listeners are currently registered 

*javax.swing.DefaultButtonModel.getGroup()*

public |javax.swing.ButtonGroup| getGroup()

Returns the group that the button belongs to. Normally used with radio buttons, which are mutually exclusive within their 
group. 



    Returns: the ButtonGroup that the button belongs to 

*javax.swing.DefaultButtonModel.getItemListeners()*

public |java.awt.event.ItemListener|[] getItemListeners()

Returns an array of all the item listeners registered on this DefaultButtonModel. 



    Returns: all of this model's ItemListeners or an empty array if no item listeners are currently registered 

*javax.swing.DefaultButtonModel.getListeners(Class<T>)*

public |T|[] getListeners(java.lang.Class<T> listenerType)

Returns an array of all the objects currently registered as FooListeners upon this model. FooListeners are registered using the 
addFooListener method. 

You can specify the listenerType argument with a class literal, such as FooListener.class. For example, you can query a 
DefaultButtonModel instance m for its action listeners with the following code: 

ActionListener[] als = (ActionListener[])(m.getListeners(ActionListener.class)); 

If no such listeners exist, this method returns an empty array. 


    listenerType - the type of listeners requested; this parameter should specify an interface that descends from java.util.EventListener 

    Returns: an array of all objects registered as FooListeners on this model, or an empty array if no such listeners have been added 

*javax.swing.DefaultButtonModel.getMnemonic()*

public int getMnemonic()





*javax.swing.DefaultButtonModel.getSelectedObjects()*

public |java.lang.Object|[] getSelectedObjects()

Overridden to return null. 



*javax.swing.DefaultButtonModel.isArmed()*

public boolean isArmed()





*javax.swing.DefaultButtonModel.isEnabled()*

public boolean isEnabled()





*javax.swing.DefaultButtonModel.isPressed()*

public boolean isPressed()





*javax.swing.DefaultButtonModel.isRollover()*

public boolean isRollover()





*javax.swing.DefaultButtonModel.isSelected()*

public boolean isSelected()





*javax.swing.DefaultButtonModel.removeActionListener(ActionListener)*

public void removeActionListener(java.awt.event.ActionListener l)





*javax.swing.DefaultButtonModel.removeChangeListener(ChangeListener)*

public void removeChangeListener(javax.swing.event.ChangeListener l)





*javax.swing.DefaultButtonModel.removeItemListener(ItemListener)*

public void removeItemListener(java.awt.event.ItemListener l)





*javax.swing.DefaultButtonModel.setActionCommand(String)*

public void setActionCommand(java.lang.String actionCommand)





*javax.swing.DefaultButtonModel.setArmed(boolean)*

public void setArmed(boolean b)





*javax.swing.DefaultButtonModel.setEnabled(boolean)*

public void setEnabled(boolean b)





*javax.swing.DefaultButtonModel.setGroup(ButtonGroup)*

public void setGroup(javax.swing.ButtonGroup group)





*javax.swing.DefaultButtonModel.setMnemonic(int)*

public void setMnemonic(int key)





*javax.swing.DefaultButtonModel.setPressed(boolean)*

public void setPressed(boolean b)





*javax.swing.DefaultButtonModel.setRollover(boolean)*

public void setRollover(boolean b)





*javax.swing.DefaultButtonModel.setSelected(boolean)*

public void setSelected(boolean b)






