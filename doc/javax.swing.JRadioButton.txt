*javax.swing.JRadioButton* *JRadioButton* An implementation of a radio button -- an item that can be selected or
 deselected, an

public class JRadioButton
  extends    |javax.swing.JToggleButton|
  implements |javax.accessibility.Accessible|

|javax.swing.JRadioButton_Description|
|javax.swing.JRadioButton_Fields|
|javax.swing.JRadioButton_Constructors|
|javax.swing.JRadioButton_Methods|

================================================================================================================================

*javax.swing.JRadioButton_Constructors*
|javax.swing.JRadioButton()|Creates an initially unselected radio button  with no set text.
|javax.swing.JRadioButton(Action)|Creates a radiobutton where properties are taken from the   Action supplied.
|javax.swing.JRadioButton(Icon)|Creates an initially unselected radio button  with the specified image but no text.
|javax.swing.JRadioButton(Icon,boolean)|Creates a radio button with the specified image  and selection state, but no text.
|javax.swing.JRadioButton(String)|Creates an unselected radio button with the specified text.
|javax.swing.JRadioButton(String,boolean)|Creates a radio button with the specified text  and selection state.
|javax.swing.JRadioButton(String,Icon)|Creates a radio button that has the specified text and image,  and that is initially uns
|javax.swing.JRadioButton(String,Icon,boolean)|Creates a radio button that has the specified text, image,  and selection state.

*javax.swing.JRadioButton_Methods*
|javax.swing.JRadioButton.getAccessibleContext()|Gets the AccessibleContext associated with this JRadioButton.
|javax.swing.JRadioButton.getUIClassID()|Returns the name of the Lclass  that renders this component.
|javax.swing.JRadioButton.paramString()|Returns a string representation of this JRadioButton.
|javax.swing.JRadioButton.updateUI()|Resets the UI property to a value from the current look and feel.

*javax.swing.JRadioButton_Description*

An implementation of a radio button -- an item that can be selected or deselected, and which displays its state to the user. 
Used with a (|javax.swing.ButtonGroup|) object to create a group of buttons in which only one button at a time can be selected. 
(Create a ButtonGroup object and use its add method to include the JRadioButton objects in the group.) 

Note: The ButtonGroup object is a logical grouping -- not a physical grouping. Tocreate a button panel, you should still create 
a (|javax.swing.JPanel|) or similar container-object and add a (|javax.swing.border.Border|) to it to set it off from 
surrounding components. 

Buttons can be configured, and to some degree controlled, by Actions. Using an Action with a button has many benefits beyond 
directly configuring a button. Refer to Swing Components Supporting Action for more details, and you can find more information 
in How to Use Actions, a section in The Java Tutorial. 

See How to Use Buttons, Check Boxes, and Radio Buttons in The Java Tutorial for further documentation. 

Warning: Swing is not thread safe. For more information see Swing's Threading Policy. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support 
is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for 
long term storage of all JavaBeansTM has been added to the java.beans package. Please see (|java.beans.XMLEncoder|) . 



*javax.swing.JRadioButton()*

public JRadioButton()

Creates an initially unselected radio button with no set text. 


*javax.swing.JRadioButton(Action)*

public JRadioButton(javax.swing.Action a)

Creates a radiobutton where properties are taken from the Action supplied. 


*javax.swing.JRadioButton(Icon)*

public JRadioButton(javax.swing.Icon icon)

Creates an initially unselected radio button with the specified image but no text. 

    icon - the image that the button should display 

*javax.swing.JRadioButton(Icon,boolean)*

public JRadioButton(
  javax.swing.Icon icon,
  boolean selected)

Creates a radio button with the specified image and selection state, but no text. 

    icon - the image that the button should display 
    selected - if true, the button is initially selected; otherwise, the button is initially unselected 

*javax.swing.JRadioButton(String)*

public JRadioButton(java.lang.String text)

Creates an unselected radio button with the specified text. 

    text - the string displayed on the radio button 

*javax.swing.JRadioButton(String,boolean)*

public JRadioButton(
  java.lang.String text,
  boolean selected)

Creates a radio button with the specified text and selection state. 

    text - the string displayed on the radio button 
    selected - if true, the button is initially selected; otherwise, the button is initially unselected 

*javax.swing.JRadioButton(String,Icon)*

public JRadioButton(
  java.lang.String text,
  javax.swing.Icon icon)

Creates a radio button that has the specified text and image, and that is initially unselected. 

    text - the string displayed on the radio button 
    icon - the image that the button should display 

*javax.swing.JRadioButton(String,Icon,boolean)*

public JRadioButton(
  java.lang.String text,
  javax.swing.Icon icon,
  boolean selected)

Creates a radio button that has the specified text, image, and selection state. 

    text - the string displayed on the radio button 
    icon - the image that the button should display 

*javax.swing.JRadioButton.getAccessibleContext()*

public |javax.accessibility.AccessibleContext| getAccessibleContext()

Gets the AccessibleContext associated with this JRadioButton. For JRadioButtons, the AccessibleContext takes the form of an 
AccessibleJRadioButton. A new AccessibleJRadioButton instance is created if necessary. 



    Returns: an AccessibleJRadioButton that serves as the AccessibleContext of this JRadioButton 

*javax.swing.JRadioButton.getUIClassID()*

public |java.lang.String| getUIClassID()

Returns the name of the Lclass that renders this component. 



    Returns: String "RadioButtonUI" 

*javax.swing.JRadioButton.paramString()*

protected |java.lang.String| paramString()

Returns a string representation of this JRadioButton. This method is intended to be used only for debugging purposes, and the 
content and format of the returned string may vary between implementations. The returned string may be empty but may not be 
null. 



    Returns: a string representation of this JRadioButton. 

*javax.swing.JRadioButton.updateUI()*

public void updateUI()

Resets the UI property to a value from the current look and feel. 




