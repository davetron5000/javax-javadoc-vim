*javax.swing.JTable.DropLocation* *JTable.DropLocation* A subclass of TransferHandler.DropLocation representing
 a drop location

public static final class JTable.DropLocation
  extends    |javax.swing.TransferHandler.DropLocation|

|javax.swing.JTable.DropLocation_Description|
|javax.swing.JTable.DropLocation_Fields|
|javax.swing.JTable.DropLocation_Constructors|
|javax.swing.JTable.DropLocation_Methods|

================================================================================================================================

*javax.swing.JTable.DropLocation_Methods*
|javax.swing.JTable.DropLocation.getColumn()|Returns the column index where a dropped item should be placed in the  table.
|javax.swing.JTable.DropLocation.getRow()|Returns the row index where a dropped item should be placed in the  table.
|javax.swing.JTable.DropLocation.isInsertColumn()|Returns whether or not this location represents an insert  of a column.
|javax.swing.JTable.DropLocation.isInsertRow()|Returns whether or not this location represents an insert  of a row.
|javax.swing.JTable.DropLocation.toString()|Returns a string representation of this drop location.

*javax.swing.JTable.DropLocation_Description*

A subclass of TransferHandler.DropLocation representing a drop location for a JTable. 



*javax.swing.JTable.DropLocation.getColumn()*

public int getColumn()

Returns the column index where a dropped item should be placed in the table. Interpretation of the value depends on the return 
of isInsertColumn(). If that method returns true this value indicates the index where a new column should be inserted. 
Otherwise, it represents the value of an existing column on which the data was dropped. This index is in terms of the view. 

-1 indicates that the drop occurred over empty space, and no column could be calculated. 



    Returns: 

*javax.swing.JTable.DropLocation.getRow()*

public int getRow()

Returns the row index where a dropped item should be placed in the table. Interpretation of the value depends on the return of 
isInsertRow(). If that method returns true this value indicates the index where a new row should be inserted. Otherwise, it 
represents the value of an existing row on which the data was dropped. This index is in terms of the view. 

-1 indicates that the drop occurred over empty space, and no row could be calculated. 



    Returns: 

*javax.swing.JTable.DropLocation.isInsertColumn()*

public boolean isInsertColumn()

Returns whether or not this location represents an insert of a column. 



    Returns: whether or not this is an insert column 

*javax.swing.JTable.DropLocation.isInsertRow()*

public boolean isInsertRow()

Returns whether or not this location represents an insert of a row. 



    Returns: whether or not this is an insert row 

*javax.swing.JTable.DropLocation.toString()*

public |java.lang.String| toString()

Returns a string representation of this drop location. This method is intended to be used for debugging purposes, and the 
content and format of the returned string may vary between implementations. 



    Returns: a string representation of this drop location 


