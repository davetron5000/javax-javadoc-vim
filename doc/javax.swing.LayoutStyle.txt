*javax.swing.LayoutStyle* *LayoutStyle* LayoutStyle provides information about how to position
 components.

public abstract class LayoutStyle
  extends    |java.lang.Object|

|javax.swing.LayoutStyle_Description|
|javax.swing.LayoutStyle_Fields|
|javax.swing.LayoutStyle_Constructors|
|javax.swing.LayoutStyle_Methods|

================================================================================================================================

*javax.swing.LayoutStyle_Constructors*
|javax.swing.LayoutStyle()|Creates a new LayoutStyle.

*javax.swing.LayoutStyle_Methods*
|javax.swing.LayoutStyle.getContainerGap(JComponent,int,Container)|Returns the amount of space to place between the component a
|javax.swing.LayoutStyle.getInstance()|Returns the shared instance of LayoutStyle.
|javax.swing.LayoutStyle.getPreferredGap(JComponent,JComponent,LayoutStyle.ComponentPlacement,int,Container)|Returns the amount
|javax.swing.LayoutStyle.setInstance(LayoutStyle)|Sets the shared instance of LayoutStyle.

*javax.swing.LayoutStyle_Description*

LayoutStyle provides information about how to position components. This class is primarily useful for visual tools and layout 
managers. Most developers will not need to use this class. 

You typically don't set or create a LayoutStyle. Instead use the static method getInstance to obtain the current instance. 



*javax.swing.LayoutStyle()*

public LayoutStyle()

Creates a new LayoutStyle. You generally don't create a LayoutStyle. Instead use the method getInstance to obtain the current 
LayoutStyle. 


*javax.swing.LayoutStyle.getContainerGap(JComponent,int,Container)*

public abstract int getContainerGap(
  javax.swing.JComponent component,
  int position,
  java.awt.Container parent)

Returns the amount of space to place between the component and specified edge of its parent. 


    component - the JComponent being positioned 
    position - the position component is being placed relative to its parent; one of SwingConstants.NORTH, SwingConstants.SOUTH, 
       SwingConstants.EAST or SwingConstants.WEST 
    parent - the parent of component; this may differ from the actual parent and may be null 

    Returns: the amount of space to place between the component and specified edge 

*javax.swing.LayoutStyle.getInstance()*

public static |javax.swing.LayoutStyle| getInstance()

Returns the shared instance of LayoutStyle. If an instance has not been specified in setInstance, this will return the 
LayoutStyle from the current LookAndFeel. 



    Returns: the shared instance of LayoutStyle 

*javax.swing.LayoutStyle.getPreferredGap(JComponent,JComponent,LayoutStyle.ComponentPlacement,int,Container)*

public abstract int getPreferredGap(
  javax.swing.JComponent component1,
  javax.swing.JComponent component2,
  javax.swing.LayoutStyle.ComponentPlacement type,
  int position,
  java.awt.Container parent)

Returns the amount of space to use between two components. The return value indicates the distance to place component2 relative 
to component1. For example, the following returns the amount of space to place between component2 and component1 when 
component2 is placed vertically above component1: 

int gap = getPreferredGap(component1, component2, ComponentPlacement.RELATED, SwingConstants.NORTH, parent); 

The type parameter indicates the relation between the two components. If the two components will be contained in the same 
parent and are showing similar logically related items, use RELATED. If the two components will be contained in the same parent 
but show logically unrelated items use UNRELATED. Some look and feels may not distinguish between the RELATED and UNRELATED 
types. 

The return value is not intended to take into account the current size and position of component2 or component1. The return 
value may take into consideration various properties of the components. For example, the space may vary based on font size, or 
the preferred size of the component. 


    component1 - the JComponent component2 is being placed relative to 
    component2 - the JComponent being placed 
    position - the position component2 is being placed relative to component1; one of SwingConstants.NORTH, SwingConstants.SOUTH, 
       SwingConstants.EAST or SwingConstants.WEST 
    type - how the two components are being placed 
    parent - the parent of component2; this may differ from the actual parent and it may be null 

    Returns: the amount of space to place between the two components 

*javax.swing.LayoutStyle.setInstance(LayoutStyle)*

public static void setInstance(javax.swing.LayoutStyle style)

Sets the shared instance of LayoutStyle. Specifying null results in using the LayoutStyle from the current LookAndFeel. 


    style - the LayoutStyle, or null 


