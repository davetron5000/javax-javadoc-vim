*javax.swing.plaf.IconUIResource* *IconUIResource* An Icon wrapper class which implements UIResource.

public class IconUIResource
  extends    |java.lang.Object|
  implements |javax.swing.Icon|
             |javax.swing.plaf.UIResource|
             |java.io.Serializable|

|javax.swing.plaf.IconUIResource_Description|
|javax.swing.plaf.IconUIResource_Fields|
|javax.swing.plaf.IconUIResource_Constructors|
|javax.swing.plaf.IconUIResource_Methods|

================================================================================================================================

*javax.swing.plaf.IconUIResource_Constructors*
|javax.swing.plaf.IconUIResource(Icon)|Creates a UIResource icon object which wraps  an existing Icon instance.

*javax.swing.plaf.IconUIResource_Methods*
|javax.swing.plaf.IconUIResource.getIconHeight()|
|javax.swing.plaf.IconUIResource.getIconWidth()|
|javax.swing.plaf.IconUIResource.paintIcon(Component,Graphics,int,int)|

*javax.swing.plaf.IconUIResource_Description*

An Icon wrapper class which implements UIResource. UI classes which set icon properties should use this class to wrap any icons 
specified as defaults. 

This class delegates all method invocations to the Icon "delegate" object specified at construction. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support 
is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for 
long term storage of all JavaBeansTM has been added to the java.beans package. Please see (|java.beans.XMLEncoder|) . 



*javax.swing.plaf.IconUIResource(Icon)*

public IconUIResource(javax.swing.Icon delegate)

Creates a UIResource icon object which wraps an existing Icon instance. 

    delegate - the icon being wrapped 

*javax.swing.plaf.IconUIResource.getIconHeight()*

public int getIconHeight()





*javax.swing.plaf.IconUIResource.getIconWidth()*

public int getIconWidth()





*javax.swing.plaf.IconUIResource.paintIcon(Component,Graphics,int,int)*

public void paintIcon(
  java.awt.Component c,
  java.awt.Graphics g,
  int x,
  int y)






