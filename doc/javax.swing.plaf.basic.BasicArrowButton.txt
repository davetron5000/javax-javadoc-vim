*javax.swing.plaf.basic.BasicArrowButton* *BasicArrowButton* JButton object that draws a scaled Arrow in one of the cardinal dir

public class BasicArrowButton
  extends    |javax.swing.JButton|
  implements |javax.swing.SwingConstants|

|javax.swing.plaf.basic.BasicArrowButton_Description|
|javax.swing.plaf.basic.BasicArrowButton_Fields|
|javax.swing.plaf.basic.BasicArrowButton_Constructors|
|javax.swing.plaf.basic.BasicArrowButton_Methods|

================================================================================================================================

*javax.swing.plaf.basic.BasicArrowButton_Fields*
|int_javax.swing.plaf.basic.BasicArrowButton.direction|

*javax.swing.plaf.basic.BasicArrowButton_Constructors*
|javax.swing.plaf.basic.BasicArrowButton(int)|Creates aBasicArrowButtonwhose arrow  is drawn in the specified direction.
|javax.swing.plaf.basic.BasicArrowButton(int,Color,Color,Color,Color)|Creates aBasicArrowButtonwhose arrow  is drawn in the spe

*javax.swing.plaf.basic.BasicArrowButton_Methods*
|javax.swing.plaf.basic.BasicArrowButton.getDirection()|Returns the direction of the arrow.
|javax.swing.plaf.basic.BasicArrowButton.getMaximumSize()|Returns the maximum size of theBasicArrowButton.
|javax.swing.plaf.basic.BasicArrowButton.getMinimumSize()|Returns the minimum size of theBasicArrowButton.
|javax.swing.plaf.basic.BasicArrowButton.getPreferredSize()|Returns the preferred size of theBasicArrowButton.
|javax.swing.plaf.basic.BasicArrowButton.isFocusTraversable()|Returns whether the arrow button should get the focus.
|javax.swing.plaf.basic.BasicArrowButton.paint(Graphics)|
|javax.swing.plaf.basic.BasicArrowButton.paintTriangle(Graphics,int,int,int,int,boolean)|Paints a triangle.
|javax.swing.plaf.basic.BasicArrowButton.setDirection(int)|Sets the direction of the arrow.

*javax.swing.plaf.basic.BasicArrowButton_Description*

JButton object that draws a scaled Arrow in one of the cardinal directions. 

Warning: Serialized objects of this class will not be compatible with future Swing releases. The current serialization support 
is appropriate for short term storage or RMI between applications running the same version of Swing. As of 1.4, support for 
long term storage of all JavaBeansTM has been added to the java.beans package. Please see (|java.beans.XMLEncoder|) . 



*int_javax.swing.plaf.basic.BasicArrowButton.direction*

The direction of the arrow. One ofSwingConstants.NORTH,SwingConstants.SOUTH,SwingConstants.EASTorSwingConstants.WEST. 



*javax.swing.plaf.basic.BasicArrowButton(int)*

public BasicArrowButton(int direction)

Creates aBasicArrowButtonwhose arrow is drawn in the specified direction. 

    direction - the direction of the arrow; one of {@code SwingConstants.NORTH}, {@code SwingConstants.SOUTH}, {@code SwingConstants.EAST} or 
       {@code SwingConstants.WEST} 

*javax.swing.plaf.basic.BasicArrowButton(int,Color,Color,Color,Color)*

public BasicArrowButton(
  int direction,
  java.awt.Color background,
  java.awt.Color shadow,
  java.awt.Color darkShadow,
  java.awt.Color highlight)

Creates aBasicArrowButtonwhose arrow is drawn in the specified direction and with the specified colors. 

    direction - the direction of the arrow; one of {@code SwingConstants.NORTH}, {@code SwingConstants.SOUTH}, {@code SwingConstants.EAST} or 
       {@code SwingConstants.WEST} 
    background - the background color of the button 
    shadow - the color of the shadow 
    darkShadow - the color of the dark shadow 
    highlight - the color of the highlight 

*javax.swing.plaf.basic.BasicArrowButton.getDirection()*

public int getDirection()

Returns the direction of the arrow. 


    direction - the direction of the arrow; one of {@code SwingConstants.NORTH}, {@code SwingConstants.SOUTH}, {@code SwingConstants.EAST} or 
       {@code SwingConstants.WEST} 

*javax.swing.plaf.basic.BasicArrowButton.getMaximumSize()*

public |java.awt.Dimension| getMaximumSize()

Returns the maximum size of theBasicArrowButton. 



    Returns: the maximum size 

*javax.swing.plaf.basic.BasicArrowButton.getMinimumSize()*

public |java.awt.Dimension| getMinimumSize()

Returns the minimum size of theBasicArrowButton. 



    Returns: the minimum size 

*javax.swing.plaf.basic.BasicArrowButton.getPreferredSize()*

public |java.awt.Dimension| getPreferredSize()

Returns the preferred size of theBasicArrowButton. 



    Returns: the preferred size 

*javax.swing.plaf.basic.BasicArrowButton.isFocusTraversable()*

public boolean isFocusTraversable()

Returns whether the arrow button should get the focus.BasicArrowButtons are used as a child component of composite components 
such asJScrollBarandJComboBox. Since the composite component typically gets the focus, this method is overriden to returnfalse. 



    Returns: {@code false} 

*javax.swing.plaf.basic.BasicArrowButton.paint(Graphics)*

public void paint(java.awt.Graphics g)





*javax.swing.plaf.basic.BasicArrowButton.paintTriangle(Graphics,int,int,int,int,boolean)*

public void paintTriangle(
  java.awt.Graphics g,
  int x,
  int y,
  int size,
  int direction,
  boolean isEnabled)

Paints a triangle. 


    g - the {@code Graphics} to draw to 
    x - the x coordinate 
    y - the y coordinate 
    size - the size of the triangle to draw 
    direction - the direction in which to draw the arrow; one of {@code SwingConstants.NORTH}, {@code SwingConstants.SOUTH}, {@code 
       SwingConstants.EAST} or {@code SwingConstants.WEST} 
    isEnabled - whether or not the arrow is drawn enabled 

*javax.swing.plaf.basic.BasicArrowButton.setDirection(int)*

public void setDirection(int dir)

Sets the direction of the arrow. 


    direction - the direction of the arrow; one of of {@code SwingConstants.NORTH}, {@code SwingConstants.SOUTH}, {@code SwingConstants.EAST} 
       or {@code SwingConstants.WEST} 


